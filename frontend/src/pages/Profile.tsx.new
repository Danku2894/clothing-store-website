import { useState, Fragment, useEffect } from 'react'
import { Tab } from '@headlessui/react'
import { Link, useNavigate } from 'react-router-dom'
import useAuthStore from '../store/authStore'
import authService from '../services/authService'
import { toast } from 'react-hot-toast'

function classNames(...classes: string[]) {
  return classes.filter(Boolean).join(' ')
}

interface UserProfile {
  firstName: string
  lastName: string
  email: string
  phone: string
  address: string
  city: string
  district: string
  ward: string
}

interface Order {
  id: string
  date: string
  total: string
  status: 'pending' | 'processing' | 'shipped' | 'delivered' | 'cancelled'
  items: {
    id: number
    name: string
    price: string
    quantity: number
    size: string
    color: string
    imageSrc: string
  }[]
}

const statusColors = {
  pending: 'bg-yellow-100 text-yellow-800',
  processing: 'bg-blue-100 text-blue-800',
  shipped: 'bg-purple-100 text-purple-800',
  delivered: 'bg-green-100 text-green-800',
  cancelled: 'bg-red-100 text-red-800',
}

const statusText = {
  pending: 'Chờ xác nhận',
  processing: 'Đang xử lý',
  shipped: 'Đang giao hàng',
  delivered: 'Đã giao hàng',
  cancelled: 'Đã hủy',
}

export default function Profile() {
  const user = useAuthStore((state) => state.user)
  const updateUser = useAuthStore((state) => state.updateUser)
  const navigate = useNavigate()
  
  useEffect(() => {
    if (!user) {
      navigate('/login')
      return
    }
  }, [user, navigate])

  const [profile, setProfile] = useState<UserProfile>({
    firstName: user?.firstName || '',
    lastName: user?.lastName || '',
    email: user?.email || '',
    phone: user?.phone || '',
    address: user?.address || '',
    city: user?.city || '',
    district: user?.district || '',
    ward: user?.ward || ''
  })

  useEffect(() => {
    if (user) {
      setProfile({
        firstName: user.firstName || '',
        lastName: user.lastName || '',
        email: user.email || '',
        phone: user.phone || '',
        address: user.address || '',
        city: user.city || '',
        district: user.district || '',
        ward: user.ward || ''
      })
    }
  }, [user])

  const handleProfileUpdate = async (e: React.FormEvent) => {
    e.preventDefault()
    
    try {
      const updatedUser = await authService.updateProfile(profile)
      updateUser(updatedUser)
      toast.success('Cập nhật thông tin thành công')
    } catch (error: any) {
      const errorMessage = error.response?.data?.message || 'Cập nhật thất bại. Vui lòng thử lại'
      toast.error(errorMessage)
      console.error('Update profile error:', error)
    }
  }

  // Rest of the component remains the same
